name: Test Notification

on:
  workflow_run:
    workflows: [Test Workflow]
    branches:
      - main
      - releases/**
    types: completed

jobs:
  update-workflow-commit:
    runs-on: ubuntu-latest
    steps:
    - name: Set final commit status
      uses: myrotvorets/set-commit-status-action@v1.1.7
      if: always()
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ github.event.workflow_run.conclusion }}
        context: Test Workflow
        sha: ${{ github.sha }}

  previous-commit:
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.get-previous-commit.outputs.previous_sha }}
      commit_state: ${{ steps.get-previous-state.outputs.previous_state }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get previous commit
        id: get-previous-commit
        run: |
          parent_sha=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }} | \
              jq -r '.parents[0].sha')
          echo "Parent commit: $parent_sha"
          echo "previous_sha=$parent_sha" >> "$GITHUB_OUTPUT"
      - name: Check previous commit state
        id: get-previous-state
        run: |
          previous_state=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/commits/${{ steps.get-previous-commit.outputs.previous_sha }}/status | \
              jq -r '.state')
          echo "Previous commit state: $previous_state"
          echo "previous_state=$previous_state" >> "$GITHUB_OUTPUT"

  new-commit-status:
    runs-on: ubuntu-latest
    needs: previous-commit
    if: ${{ (needs.previous-commit.outputs.commit_state == 'success' && github.event.workflow_run.conclusion == 'failure') || needs.previous-commit.outputs.commit_state == 'failure' && github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Send Slack Message
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: "C05GQNZF4Q2"
          payload: |
            {
              "attachments": [{
                "color": ${{ github.event.workflow_run.conclusion == 'success' && '#238823' || '#D2222D' }},
                "blocks": [
                  {
                    "type": "header",
                    "text": {
                      "type": "plain_text",
                      "text": "${{ github.event.workflow_run.head_repository.name }} workflow ${{ github.event.workflow_run.conclusion }}",
                      "emoji": true
                    }
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "üõ†Ô∏è Commit",
                          "emoji": true
                        },
                        "url": "https://github.com/${{ github.event.workflow_run.head_repository.full_name }}/commit/${{ github.event.workflow_run.head_sha }}"
                      },
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "üë∑ Pipeline",
                          "emoji": true
                        },
                        "url": "${{ github.event.workflow_run.html_url }}"
                      }
                    ]
                  }
                ]
              }
            }]
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
