name: Create Release Patch

on:
  push:
    branches:
      - release/**


jobs:
  create-release-patch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_TOKEN }}
      - name: Parse branch version
        id: branch-version
        run: |
          echo "version=${GITHUB_REF#refs/heads/release/}" >> "$GITHUB_OUTPUT"
      - name: Check initial release version (X.Y.0) exists
        id: initial-version
        env:
          RELEASE_DOT_O: "${{ steps.branch-version.outputs.version }}.0"
        run: |
          if [[ $(git tag -l "$RELEASE_DOT_O") ]]; then
            exists=true
          else
            exists=false
          fi

          echo "exists=$exists" >> "$GITHUB_OUTPUT"
      - name: Determine patch version
        id: patch-version
        env:
          BRANCH_VERSION: ${{ steps.branch-version.outputs.version }}
          BASE_VERSION_EXISTS: ${{ steps.initial-version.outputs.exists }}
        run: |
          if [[ $BASE_VERSION_EXISTS = true ]]; then
            base_version="$BRANCH_VERSION.0"
            patch_version=$(git rev-list --count $base_version..HEAD)
          else
            patch_version="0"
          fi

          echo "full_version=$BRANCH_VERSION.$patch_version" >> "$GITHUB_OUTPUT"
      - name: Push version tag
        env:
          FULL_VERSION: ${{ steps.patch-version.outputs.full_version }}
        run: |
          git config user.email "you@example.com"
          git config user.name "Your Name"

          git tag -a v$FULL_VERSION -m "My version $FULL_VERSION"
          git push origin v$FULL_VERSION
